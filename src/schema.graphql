scalar Date

type Query {
	viewChatRooms: [ChatRoom]!
	messages: [Message]!
}

type Mutation {
	signup(username: String!, email: String!, password: String!): String!
	login(email: String!, password: String!): String!
	createMessage(message: newMessage!): Boolean!
#    createChatRoom(input: createChatRoomInput!): Boolean!
}

type Message {
	text: String!
    createdAt: Date!
    username: String
	sentBy: User
}


type User {
	id: ID!
    username: String!
	createdAt: Date!
    messages: [Message]!
}

type Subscription {
	newMessage: Message!
}

input newMessage {
    text: String!
}

type ChatRoom {
    id: ID!
    name: String!
    description: String!
}

#input createChatRoomInput {
#    name: String!
#    topic: String!
#    messages: [Message]!
#}



