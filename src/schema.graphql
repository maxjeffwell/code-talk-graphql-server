scalar Date

type Query {
	info: String!
	packageName: String!
	messages: [Message]!
	allUsers: [User]!
}

type Mutation {
	signup(username: String!, email: String!, password: String!): SignupResponse!
	login(email: String!, password: String!): String!
	createMessage(message: newMessage!): Message!

}

type Message {
	id: Int
	text: String
    user: User!
	createdAt: String!
}

type User {
	id: Int!
    email: String!
	username: String!
}

type Subscription {
	newMessage: Message!
}

input newMessage {
	text: String!
}

type SignupResponse {
	ok: Boolean!
	user: User
	errors: [Error!]
}


type Error {
	path: String!
	message: String
}


