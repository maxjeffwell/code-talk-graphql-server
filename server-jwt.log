
> code-talk-server@1.0.0 start
> nodemon --exec babel-node src/index.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[dotenv@17.2.0] injecting env (9) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
‚ö†Ô∏è  Running in development mode. Security features may be relaxed.
[dotenv@17.2.0] injecting env (0) from .env (tip: ‚öôÔ∏è  suppress all logs with { quiet: true })
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_users_role' GROUP BY 1
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'messages'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'messages' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Apollo Server is running on http://localhost:8000/graphql
WebSocket subscriptions ready at ws://localhost:8000/graphql
2025-07-11 19:45:48 [[32minfo[39m]: GraphQL Operation Started  {"query":"mutation SignUp($username: String!, $email: String!, $password: String!) { signUp(username: $username, email: $email, password: $password) { token } }"}
Executing (default): INSERT INTO "users" ("id","username","email","password","role","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","username","email","password","role","createdAt","updatedAt";
2025-07-11 19:45:48 [[31merror[39m]: Database Error Error: 
    at Query.run (/home/maxjeffwell/GitHub_Projects/code-talk-graphql-server/node_modules/sequelize/src/dialects/postgres/query.js:76:25)
    at /home/maxjeffwell/GitHub_Projects/code-talk-graphql-server/node_modules/sequelize/src/sequelize.js:650:28
    at PostgresQueryInterface.insert (/home/maxjeffwell/GitHub_Projects/code-talk-graphql-server/node_modules/sequelize/src/dialects/abstract/query-interface.js:795:21)
    at model.save (/home/maxjeffwell/GitHub_Projects/code-talk-graphql-server/node_modules/sequelize/src/model.js:4154:35)
    at Function.create (/home/maxjeffwell/GitHub_Projects/code-talk-graphql-server/node_modules/sequelize/src/model.js:2305:12)
    at Object.signUp (/home/maxjeffwell/GitHub_Projects/code-talk-graphql-server/src/resolvers/user.js:66:22) {"operation":"signUp","error":"Validation error"}
2025-07-11 19:45:48 [[31merror[39m]: GraphQL Error Encountered Cannot assign to read only property 'name' of object 'UserInputError: The username is already taken. Please choose a different one.'  {"path":["signUp"],"locations":[{"line":1,"column":76}]}
2025-07-11 19:45:48 [[31merror[39m]: GraphQL Error Cannot assign to read only property 'name' of object 'UserInputError: The username is already taken. Please choose a different one.'  {"code":"INTERNAL_SERVER_ERROR","path":["signUp"],"locations":[{"line":1,"column":76}]}
2025-07-11 19:45:48 [[33mwarn[39m]: GraphQL Response with errors  {"errorCount":1}
2025-07-11 19:45:48 [[32minfo[39m]: ::1 - - [11/Jul/2025:23:45:48 +0000] "POST /graphql HTTP/1.1" 200 258 "-" "curl/8.5.0"  
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[dotenv@17.2.0] injecting env (9) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
‚ö†Ô∏è  Running in development mode. Security features may be relaxed.
[dotenv@17.2.0] injecting env (0) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_users_role' GROUP BY 1
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'messages'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'messages' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Apollo Server is running on http://localhost:8000/graphql
WebSocket subscriptions ready at ws://localhost:8000/graphql
